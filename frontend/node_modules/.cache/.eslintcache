[{"/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/index.js":"1","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/App.js":"2","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/about/About.js":"3","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/projects/Projects.js":"4","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/experiences/Experiences.js":"5","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/skills/Skills.js":"6","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/contactMe/ContactMe.js":"7"},{"size":416,"mtime":1652906910301,"results":"8","hashOfConfig":"9"},{"size":515,"mtime":1653253687616,"results":"10","hashOfConfig":"9"},{"size":957,"mtime":1653277988671,"results":"11","hashOfConfig":"9"},{"size":3141,"mtime":1653184385747,"results":"12","hashOfConfig":"9"},{"size":4067,"mtime":1653256309874,"results":"13","hashOfConfig":"9"},{"size":1195,"mtime":1653183078635,"results":"14","hashOfConfig":"9"},{"size":4244,"mtime":1653274216049,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"1i6zquu",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/index.js",["42","43","44"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport index from './index.css';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n",[],"/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/App.js",[],[],"/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/about/About.js",["45","46","47"],[],"/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/projects/Projects.js",["48","49","50","51"],[],"import React, { useRef, useState, useEffect } from \"react\";\nimport \"./projects.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faarrowright } from \"@fortawesome/free-solid-svg-icons\";\n// import imges from \"./img.jpg\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\nconsole.log(\"Hello World\");\n\nconst Projects = () => {\n  const scrl = useRef();\n  const [scrollX, setscrollX] = useState(0); // For detecting start scroll postion\n  const [scrolEnd, setscrolEnd] = useState(false); // For detecting end of scrolling\n  const [isLoading, setisLoading] = useState(true); // For detecting end of scrolling\n\n  const slide = (shift) => {\n    scrl.current.scrollLeft += shift;\n    setscrollX(scrollX + shift);\n    //For checking if the scroll has ended\n    if (\n      Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <=\n      scrl.current.offsetWidth\n    ) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n  };\n\n  const scrollCheck = () => {\n    setscrollX(scrl.current.scrollLeft);\n    if (\n      Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <=\n      scrl.current.offsetWidth\n    ) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n  };\n  useEffect(() => {\n    //Check width of the scollings\n    if (\n      scrl.current &&\n      scrl?.current?.scrollWidth === scrl?.current?.offsetWidth\n    ) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n    return () => {};\n  }, [scrl?.current?.scrollWidth, scrl?.current?.offsetWidth]);\n\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"projects/\")\n      .then((res) => {\n        setProjects((prev) => [...res.data[\"Projects\"]]);\n        // console.log(projects[0]);\n        setisLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  // console.log\n  return (\n    <div>\n      <div className=\"sec container\">\n        <h4 className=\"display-7\">Projects</h4>\n        <hr className=\"hr\" />\n        <div className=\"proj-wrapper\">\n          {scrollX !== 0 && (\n            <button className=\"swipe-left\" onClick={() => slide(-320)}>\n              <i className=\"fa fa-angle-left\"></i>\n            </button>\n          )}\n          <div\n            id=\"projects\"\n            className=\"projects container-fluid\"\n            ref={scrl}\n            onScroll={scrollCheck}\n          >\n            {projects.length !== 0 &&\n              projects.map((project) => (\n                <div key= {project['id']} className=\"project\">\n                  <img className=\"project-pic\" src={project[\"image\"]} />\n                  <h5>{project[\"project_name\"]}</h5>\n                  <div className=\"texts\">{project[\"details\"]}</div>\n                </div>\n              ))}\n          </div>\n          {!scrolEnd && (\n            <button className=\"swipe-right\" onClick={() => slide(320)}>\n              <i className=\"fa fa-angle-right\"></i>{\" \"}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/experiences/Experiences.js",["52","53","54","55","56","57"],[],"import React, { useRef, useState, useEffect } from \"react\";\nimport \"./experiences.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faarrowright } from \"@fortawesome/free-solid-svg-icons\";\n// import imges from \"./img.jpg\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\n\nexport default function Experiences() {\n  // const []\n  const [experiences, setExperiences] = useState([]);\n  const scrl = useRef();\n  const [scrollX, setscrollX] = useState(0); // For detecting start scroll postion\n  const [scrolEnd, setscrolEnd] = useState(false); // For detecting end of scrolling\n  const [isLoading, setisLoading] = useState(true); // For detecting end of scrolling\n\n  useEffect(()=>{\n    axios.get('/experiences')\n    .then((res) => {\n      setExperiences([...res.data['Experiences']])\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  },[])\n\n  const slide = (shift) => {\n    scrl.current.scrollLeft += shift;\n    setscrollX(scrollX + shift);\n    //For checking if the scroll has ended\n    if (\n      Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <=\n      scrl.current.offsetWidth\n    ) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n  };\n\n  const scrollCheck = () => {\n    setscrollX(scrl.current.scrollLeft);\n    if (\n      Math.floor(scrl.current.scrollWidth - scrl.current.scrollLeft) <=\n      scrl.current.offsetWidth\n    ) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n  };\n  useEffect(() => {\n    //Check width of the scollings\n    if (\n      scrl.current &&\n      scrl?.current?.scrollWidth === scrl?.current?.offsetWidth\n    ) {\n      setscrolEnd(true);\n    } else {\n      setscrolEnd(false);\n    }\n    return () => {};\n  }, [scrl?.current?.scrollWidth, scrl?.current?.offsetWidth]);\n  return (\n    <div>\n      <div className=\"sec container\">\n        <h4 className=\"display-7\">Experiences</h4>\n        <hr className=\"hr\" />\n        <div className=\"exp-wrapper\">\n          {scrollX !== 0 && (\n            <button className=\"swipe-left\" onClick={() => slide(-320)}>\n              <i className=\"fa fa-angle-left\"></i>\n            </button>\n          )}\n          <div\n            id=\"experiences\"\n            className=\"experiences container-fluid\"\n            ref={scrl}\n            onScroll={scrollCheck}\n          >\n            <div className=\"experience\">\n              <h5>New Experiences</h5>\n              <div className=\"texts\">\n                lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem\n                lorem lorem lorem lorem\n              </div>\n            </div>\n            <div className=\"experience\">\n              <h5>New Experiences</h5>\n              <div className=\"texts\">\n                lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem\n                lorem lorem lorem lorem\n              </div>\n            </div>\n            <div className=\"experience\">\n              <h5>New Experiences</h5>\n              <div className=\"texts\">\n                lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem\n                lorem lorem lorem lorem\n              </div>\n            </div>\n            <div className=\"experience\">\n              <h5>New Experiences</h5>\n              <div className=\"texts\">\n                lorem lorem lorem lorem lorem lorem lorem lorem lorem lorem\n                lorem lorem lorem lorem\n              </div>\n            </div>\n            {/* {projects.length !== 0 &&\n              projects.map((project) => (\n                <div key={project[\"id\"]} className=\"project\">\n                  <img className=\"project-pic\" src={project[\"image\"]} />\n                  <h5>{project[\"project_name\"]}</h5>\n                  <div className=\"texts\">{project[\"details\"]}</div>\n                </div>\n              ))} */}\n          </div>\n          {!scrolEnd && (\n            <button className=\"swipe-right\" onClick={() => slide(320)}>\n              <i className=\"fa fa-angle-right\"></i>{\" \"}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/skills/Skills.js",["58","59","60","61","62","63"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./skills.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faarrowright } from \"@fortawesome/free-solid-svg-icons\";\nimport javaJpg from \"./java.png\";\nimport djangoPng from \"./django.png\";\nimport phpPng from \"./php.png\";\nimport axios from \"axios\";\n\nconst Skills = () => {\n  const [skills, setSkills] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\"/skills/\")\n      .then((res) => {\n        setSkills(() => [...res.data[\"Skills\"]]);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"sec container\">\n        <h4 className=\"display-7\">Skills</h4>\n        <hr className=\"hr\" />\n        <div className=\"row skills\">\n          {skills.length !== 0 &&\n            skills.map((skill) => (\n              <div key={skill['id']} className=\"col-sm skill\">\n                <img className=\"skill-img\" src={skill['logo']} alt={skill['skill_name']} />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Skills;\n","/home/shahriar/Desktop/Codes/React/portfolio/frontend/src/components/contactMe/ContactMe.js",[],[],{"ruleId":"64","severity":1,"message":"65","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":9},{"ruleId":"64","severity":1,"message":"68","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":14},{"ruleId":"64","severity":1,"message":"69","line":8,"column":8,"nodeType":"66","messageId":"67","endLine":8,"endColumn":13},{"ruleId":"64","severity":1,"message":"70","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":9,"column":11,"nodeType":"73","endLine":9,"endColumn":63},{"ruleId":"74","severity":1,"message":"75","line":13,"column":37,"nodeType":"73","messageId":"76","endLine":13,"endColumn":78,"fix":"77"},{"ruleId":"64","severity":1,"message":"78","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":25},{"ruleId":"64","severity":1,"message":"79","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":9},{"ruleId":"71","severity":1,"message":"72","line":93,"column":19,"nodeType":"73","endLine":93,"endColumn":73},{"ruleId":"64","severity":1,"message":"78","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":25},{"ruleId":"64","severity":1,"message":"79","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":9},{"ruleId":"64","severity":1,"message":"80","line":11,"column":10,"nodeType":"66","messageId":"67","endLine":11,"endColumn":21},{"ruleId":"64","severity":1,"message":"81","line":15,"column":10,"nodeType":"66","messageId":"67","endLine":15,"endColumn":19},{"ruleId":"64","severity":1,"message":"82","line":15,"column":21,"nodeType":"66","messageId":"67","endLine":15,"endColumn":33},{"ruleId":"64","severity":1,"message":"78","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":25},{"ruleId":"64","severity":1,"message":"79","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":22},{"ruleId":"64","severity":1,"message":"83","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":15},{"ruleId":"64","severity":1,"message":"84","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":17},{"ruleId":"64","severity":1,"message":"85","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":14},{"ruleId":"64","severity":1,"message":"81","line":12,"column":10,"nodeType":"66","messageId":"67","endLine":12,"endColumn":19},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","'index' is defined but never used.","'about' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"86","text":"87"},"'FontAwesomeIcon' is defined but never used.","'faarrowright' is defined but never used.","'experiences' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setisLoading' is assigned a value but never used.","'javaJpg' is defined but never used.","'djangoPng' is defined but never used.","'phpPng' is defined but never used.",[536,536]," rel=\"noreferrer\""]